import React from 'react';
import PropTypes from 'prop-types';
import { Form } from 'formik';
import * as Yup from 'yup';

import { Input, Button } from '../shared/ui';

/**
 * Login schema for this form
 * Contains validation for fields username and password
 */
export const LoginSchema = Yup.object().shape({
  username: Yup.string().required('Please enter your username'),
  password: Yup.string().required('Please enter your password'),
});

/**
 * Login form generated by Formik for our Login screen
 * @param {object} Params from Formik for this Login form
 */
const LoginForm = ({
  values,
  touched,
  errors,
  isSubmitting,
  handleChange,
  handleBlur,
  handleSubmit,
  isValid,
  loginError,
}) => (
  <Form>
    <Input
      id="username"
      type="text"
      name="username"
      label="Username"
      onBlur={handleBlur}
      onChange={handleChange}
      value={values.username}
      errorMessage={
        touched.username && errors.username ? errors.username : null
      }
    />
    <Input
      id="password"
      type="password"
      name="password"
      label="Password"
      onBlur={handleBlur}
      onChange={handleChange}
      value={values.password}
      errorMessage={
        touched.password && errors.password ? errors.password : null
      }
    />
    <Button
      id="login-form-button"
      colour="primary"
      type="submit"
      aria-label="Sign in"
      block
      onClick={handleSubmit}
      disabled={!isValid || (isSubmitting && !loginError)}
    >
      Sign in
    </Button>
  </Form>
);

LoginForm.propTypes = {
  /** Values from Formik */
  values: PropTypes.object.isRequired,
  /** Object of touched elements from Formik */
  touched: PropTypes.object.isRequired,
  /** Function to handle form submission */
  handleSubmit: PropTypes.func.isRequired,
  /** Function to handle field change */
  handleChange: PropTypes.func.isRequired,
  /** Function to handle field blur */
  handleBlur: PropTypes.func.isRequired,
  /** Boolean to determine if form passes validation schema */
  isValid: PropTypes.bool.isRequired,
  isSubmitting: PropTypes.bool,
  errors: PropTypes.shape({
    username: PropTypes.string,
    password: PropTypes.string,
  }),
  loginError: PropTypes.string,
};

LoginForm.defaultProps = {
  isSubmitting: false,
  errors: {},
  loginError: null,
};

export default LoginForm;
